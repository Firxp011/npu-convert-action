name: NPU Model Conversion

on:
  workflow_dispatch:
    inputs:
      civitai_version_id:
        description: "Civitai modelVersionId (e.g. 90854). Can be found in URL bar."
        required: true
        type: string
      filename:
        description: "Save as (e.g. models/my.safetensors). Must end with .safetensors"
        required: true
        default: "models/model.safetensors"
        type: string
      clip_skip:
        description: "CLIP skip"
        required: true
        default: "2"
        type: choice
        options: ["1", "2"]
      min_soc:
        description: "min | 8gen1 | 8gen2"
        required: true
        default: "8gen2"
        type: choice
        options: ["min", "8gen1", "8gen2"]

jobs:
  convert:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    steps:
      - name: Free up disk space
        run: |
          set -euo pipefail
          df -h
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/share/swift || true
          sudo rm -rf /usr/local/.ghcup || true
          sudo rm -rf /usr/local/julia* || true
          sudo rm -rf /usr/local/share/powershell || true
          sudo rm -rf /usr/local/share/chromium || true
          sudo rm -rf /opt/microsoft || true
          sudo rm -rf /opt/google || true
          sudo docker system prune --all --force || true
          sudo docker builder prune --all --force || true
          df -h

      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Prepare folders
        run: |
          mkdir -p models tools

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip zip curl

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Download npuconvert scripts
        run: |
          cd tools
          curl -L -o npuconvert.zip "https://chino.icu/local-dream/npuconvert.zip"
          unzip -q npuconvert.zip -d npuconvert
          echo "NPUCONVERT_DIR=$GITHUB_WORKSPACE/tools/npuconvert/npuconvert" >> $GITHUB_ENV

      - name: Download QNN SDK v2.28.0.241029
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/qnn_sdk"
          cd "$GITHUB_WORKSPACE/qnn_sdk"
          curl -L -o qnn.zip "https://apigwx-aws.qualcomm.com/qsc/public/v1/api/download/software/qualcomm_neural_processing_sdk/v2.28.0.241029.zip"
          unzip -q qnn.zip
          
      - name: Fix npuconvert path and customize
        run: |
          set -euo pipefail
          BIN_FILE=$(find "$GITHUB_WORKSPACE/qnn_sdk" -type f -name "envsetup.sh" -print -quit || true)
          if [ -z "${BIN_FILE:-}" ]; then
            echo "### QNN envsetup.sh not found. Listing qnn_sdk structure ###"
            find "$GITHUB_WORKSPACE/qnn_sdk" -maxdepth 3 -mindepth 1 -print
            exit 1
          fi
          
          QNN_SDK_BIN="$(dirname "$BIN_FILE")"
          echo "### QNN_SDK_BIN: $QNN_SDK_BIN ###" 
          echo "QNN_SDK_BIN=$QNN_SDK_BIN" >> $GITHUB_ENV
          sed -i 's|cd /data/qairt/2.28.0.241029/bin|cd "$QNN_SDK_BIN"|' "$NPUCONVERT_DIR/scripts/convert_all.sh"
          
          if [ -f "$GITHUB_WORKSPACE/prepare_data.py" ]; then
            echo "### Overriding prepare_data.py with custom version ###"
            cp "$GITHUB_WORKSPACE/prepare_data.py" "$NPUCONVERT_DIR/prepare_data.py"
          else
            echo "### Skipping replacement ###"
          fi

      - name: Download model from Civitai
        env:
          CIVITAI_API_KEY: ${{ secrets.CIVITAI_API_KEY }}
        run: |
          set -euo pipefail
          VER_ID="${{ inputs.civitai_version_id }}"
          [ -n "$VER_ID" ] || { echo "You must provide civitai modelVersionId."; exit 1; }
          URL_INPUT="https://civitai.com/api/download/models/${VER_ID}"
          curl -L -H "Authorization: Bearer ${CIVITAI_API_KEY}" \
               -o "${{ inputs.filename }}" \
               --fail --retry 5 --retry-delay 5 \
               "$URL_INPUT"
          case "${{ inputs.filename }}" in
            *.safetensors) ;;
            *) echo "filename must end with .safetensors"; exit 1 ;;
          esac

      - name: Setup Python env with uv
        run: |
          cd "$NPUCONVERT_DIR"
          uv venv -p 3.10
          source .venv/bin/activate
          uv sync
          
      - name: Run (1) prepare_data.py
        run: |
          set -euo pipefail
          cd "$NPUCONVERT_DIR"
          source .venv/bin/activate
          python prepare_data.py --model_path "$GITHUB_WORKSPACE/${{ inputs.filename }}" --clip_skip "${{ inputs.clip_skip }}"

      - name: Upload preview images
        uses: actions/upload-artifact@v4
        with:
          name: preview-images
          path: |
            ${{ env.NPUCONVERT_DIR }}/data.pkl
            ${{ env.NPUCONVERT_DIR }}/images/*.png
          if-no-files-found: ignore

      - name: Run (2) gen_quant_data.py
        run: |
          set -euo pipefail
          cd "$NPUCONVERT_DIR"
          source .venv/bin/activate
          python gen_quant_data.py

      - name: Run (3) export_onnx.py
        run: |
          set -euo pipefail
          cd "$NPUCONVERT_DIR"
          source .venv/bin/activate
          python export_onnx.py --model_path "$GITHUB_WORKSPACE/${{ inputs.filename }}" --clip_skip "${{ inputs.clip_skip }}"

      - name: Run (4) convert_all.sh
        run: |
          set -euo pipefail
          cd "$NPUCONVERT_DIR"
          source .venv/bin/activate
          bash scripts/convert_all.sh --min_soc "${{ inputs.min_soc }}"

      - name: Package outputs
        run: |
          cd "$NPUCONVERT_DIR"
          OUTDIR=$(ls -d output/qnn_models_* | tail -n 1)
          test -d "$OUTDIR"
          zip -r npu_models.zip "$OUTDIR"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: npu_models
          path: ${{ env.NPUCONVERT_DIR }}/npu_models.zip
          if-no-files-found: error
